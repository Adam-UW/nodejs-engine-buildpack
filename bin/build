#!/usr/bin/env bash
set -eo pipefail

layersdir=$1

echo "---> Node.js Buildpack"

echo "---> Downloading and extracting node"
mkdir -p $layersdir/nodejs
echo -e "launch = true" > $layersdir/nodejs.toml

nodejs_url=https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz
wget -q -O - "$nodejs_url" | tar -xJf - -C "$layersdir/nodejs"

# Create path for build and run
mv $layersdir/nodejs/node-v10.16.0-linux-x64/* $layersdir/nodejs
export PATH=$layersdir/nodejs/bin:$PATH

[ -f ./yarn.lock ] && use_yarn=true || use_yarn=false

if $use_yarn; then
  echo "---> Installing yarn"
  mkdir -p $layersdir/yarn
  echo -e "cache = true\nlaunch = true" > "$layersdir/yarn.toml"

  npm install -g yarn --prefix $layersdir/yarn
  export PATH=$layersdir/yarn/bin:$PATH
fi

rm -rf node_modules
if $use_yarn; then
  echo "---> Restoring node modules from ./yarn.lock"
  yarn install
elif [[ -f package-lock.json ]]; then
  echo "---> Restoring node modules from ./package-lock.json"
  npm install
else
  echo "---> Installing node modules"
  npm install --no-package-lock
fi

# Set default start command
$use_yarn && start_cmd='yarn start' || start_cmd='npm run start'
echo "processes = [{ type = 'web', command = '$start_cmd' }]" > "$layersdir/launch.toml"
